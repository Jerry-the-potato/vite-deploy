{"version":3,"file":"worker-z9YZT4ad.js","sources":["../src/js/worker.js"],"sourcesContent":["// 控制介面\nlet requestID = {\n\t\"painter\": undefined,\n\t\"pSystem\": undefined\n}\nself.onmessage = function handleMessageFromMain(msg) {\n\tlet w = msg.data.w;\n\tlet h = msg.data.h;\n    switch(msg.data.name){\n        case \"createOffscreenCanvas\":\n            board = new OffscreenCanvas(w, h); // 你看不見我\n            board_ctx = board.getContext('2d');\n\t\t\tloadPaticleSystem();\n            simulatior();\n\t\t\tmain();\n\t\tcase \"setOffscreen\":\n            board.width = w;\n            board.height = h;\n\t\t\tboard_ctx.translate(w * 0.25, 0);\n            painter.setPixel(w, h); // 自定義繪圖物件\n\t\t\tbreak;\n\t\tcase \"cancelAnimation\":\n\t\t\tcancelAnimationFrame(requestID.painter);\n\t\t\tcancelAnimationFrame(requestID.pSystem);\n\t\t\tdelete requestID.painter;\n\t\t\tdelete requestID.pSystem;\n\t\t\tbreak;\n\t\tcase \"requestAnimation\":\n\t\t\tif(requestID.painter) self.postMessage({\"name\": \"error\", \"message\": \"requestAnimation existed\"});\n\t\t\telse requestID.painter = requestAnimationFrame(main);\n\t\t\tif(requestID.pSystem) self.postMessage({\"name\": \"error\", \"message\": \"requestAnimation existed\"});\n\t\t\telse requestID.pSystem = requestAnimationFrame(simulatior);\n    }\n};\nlet board;\nlet board_ctx;\n// 繪圖系統-管理及方法\nlet painter = new createPainter();\nfunction createPainter(){\n\tthis.works = [];\n\tthis.pixelX = 100;\n\tthis.pixelY = 100;\n\tthis.setPixel = function(w, h){\n\t\tthis.pixelX = w;\n\t\tthis.pixelY = h;\n\t}\n\tthis.draw = function(obj){ // 透過 painter.draw 呼叫其私有函式\n\t\tlet ctx = obj.ctx;\n\t\tlet w = this.pixelX;\n\t\tlet h = this.pixelY;\n\t\tlet x = obj.x;\n\t\tlet y = obj.y;\n\t\tlet r = obj.r;\n\t\tlet x2 = obj.x2;\n\t\tlet y2 = obj.y2;\n\t\tlet text = obj.text;\n\t\tlet size = obj.size;\n\t\tlet color = obj.color;\n\t\t\n\t\tlet a = obj.a;\n\t\tlet b = obj.b;\n\t\tlet angle = obj.angle;\n        if(ctx)\n            switch(obj.name){\n                case \"circle\": drawCircle();\n                break;\n                case \"point\": drawPoint();\n                break;\n                case \"line\": drawLine();\n                break;\n                case \"crescent\": drawCrescent();\n\t\t\t\tbreak;\n\t\t\t\tcase \"text\": drawText();\n            }\n\t\tfunction drawCircle() {\n\t\t\tif(x + y + r == \"NaN\"){\n\t\t\t\tconsole.warn(\"drawCircle failed: missing parameter\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, r, 0, 2 * Math.PI, false);\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.fill();\n\t\t}\n\t\t\n\t\tfunction drawPoint() {\n\t\t\tif(x + y + size == \"NaN\"){\n\t\t\t\tconsole.warn(\"drawPoint failed: missing parameter\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.fillRect(x - size/2, y - size/2, size, size);\n\t\t}\n\t\t\n\t\tfunction drawLine() {\n\t\t\tif(x + y + x2 + y2 == \"NaN\"){\n\t\t\t\tconsole.warn(\"drawLine failed: missing parameter\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.strokeStyle = color;\n\t\t\tctx.lineWidth = (size)?size:1;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tfunction drawCrescent(){\n\t\t\tif(x + y + a + b + angle + size == \"NaN\"){\n\t\t\t\tconsole.warn(\"drawCrescent failed: missing parameter\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet c = Math.sqrt(a * a + b * b);\n\t\t\tlet aTan = Math.atan(a / b);\n\t\t\tlet dx = Math.cos(angle + Math.PI / 2) * a * size;\n\t\t\tlet dy = Math.sin(angle + Math.PI / 2) * a * size;\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, b * size, angle, Math.PI + angle, true);\n\t\t\tctx.arc(x + dx, y + dy, c * size, Math.PI + angle + aTan, angle - aTan, false); // 順時針 縮小 +-\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.fill(); \n\t\t}\n\t\tfunction drawText(){\n\t\t\tx = Math.round(x);\n\t\t\ty = Math.round(y);\n\t\t\tctx.font = size + \"px Comic Sans MS\";\n\t\t\tctx.textBaseline = \"middle\";\n\t\t\tctx.textAlign = \"center\";\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.fillText(text, x, y);\n\t\t}\n\t}\n}\n\n// 繪圖系統-main\nfunction main() {\n\t// clearBoard();\n\t// console.log(painter.works);\n\tpainter.works.forEach(obj => {painter.draw(obj);});\n\tpainter.works = [];\n\tconst bitmap = board.transferToImageBitmap();\n\tself.postMessage({\"name\": \"drawImage\", \"bitmap\": bitmap});\n\trequestID.painter = requestAnimationFrame(main);\n}\n\nfunction clearBoard() {\n\tboard_ctx.fillStyle = 'rgba(255,255,255,0)';\n\tboard_ctx.fillRect(0, 0, board.width, board.height);\n}\n\n\n// 粒子系統\nlet transitionRadian = 0;\nlet trasitionOmega = Math.PI / 10000;\nlet data = [];\nlet alpha = 0.5;\nlet beta = 1;\nlet gamma = 0.5;\nlet delta = 1;\nlet dlength = 0.1;\nlet speed = 10;\nlet mouseOn = false;\nlet transform = true;\n\nlet timeBefore = Date.now();\nconst DELAY = new Array(100);\nDELAY.fill(17);\n\nfunction simulatior(){\n\tmotion(data);\n\taddTexture(data);\n\tupdateFps();\n\trequestID.pSystem = requestAnimationFrame(simulatior);\n}\n\nfunction loadPaticleSystem(){\n\tdata = [];\n\tpopulate(data, 2000);\n\tfunction populate(data, n) {\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tlet mid = 0.5;\n\t\t\tlet pow = 1;\n\t\t\tlet max = 1 + Math.pow(mid, pow);\n\t\t\tlet minus1 = Math.pow(getRandomFloat(mid, 1), pow);\n\t\t\tlet minus2 = Math.pow(getRandomFloat(0, mid), pow);\n\n\t\t\tlet obj = {\n\t\t\t\t\"d\": (max - minus1 - minus2) * board.width,  // distance\n\t\t\t\t\"r\": getRandomFloat(0, Math.PI * 2), // radian\n\t\t\t\t\"fakeX\": board.width/2,\n\t\t\t\t\"fakeY\": board.height/2,\n\t\t\t\t\"x\": board.width/2,\n\t\t\t\t\"y\": board.height/2,\n\t\t\t\t\"vx\": [],\n\t\t\t\t\"vy\": []\n\t\t\t};\n\t\t\tobj.x+= obj.d * Math.cos(obj.r);\n\t\t\tobj.y+= obj.d * Math.sin(obj.r);\n\t\t\t// 減去下面兩行會有很酷的效果\n\t\t\tobj.fakeX = obj.x;\n\t\t\tobj.fakeY = obj.y;\n\t\t\tdata.push(obj);\n\t\t}\n\n\t\tfunction getRandomFloat(min, max) {\n\t\t\treturn Math.random() * (max*100 - min*100 + 1)/100 + min;\n\t\t}\n\t}\n}\n\nfunction motion(list){\n\t// 沿著中心點旋轉\n\tfor (let i = 0; i < list.length; i++) {\n\t\tlet point = list[i];\n\t\tconst rad = transitionRadian;\n\t\tconst p1 = Math.cos(rad)*Math.sin(rad);\n\t\tconst p2 = Math.sin(rad);\n\t\tconst p3 = Math.sin(rad*2);\n\t\tlet d = point.d / 2;\n\t\tif(transform) d = point.d / 3 * (0.05 + 0.95 * (1 - p3));\n\t\tlet w1 = d * p1 * 0.1;\n\t\tlet w2 = d * p2 * 0.1;\n\t\tpoint.r+= Math.PI / 1000;\n\t\tpoint.x-= point.fakeX;\n\t\tpoint.y-= point.fakeY;\n\t\tpoint.fakeX = board.width/2 + d * Math.cos(point.r + w2);\n\t\tpoint.fakeY = board.height/2 + d * Math.sin(point.r + w2);\n\t\tpoint.x+= point.fakeX;\n\t\tpoint.y+= point.fakeY;\n\t}\n\n\t// 物理引擎\n\tfor (let i = 0; i < list.length; i++) {\n\t\tlet p1 = list[i];\n\t\tlet vx1 = 0;\n\t\tlet vx2 = 0;\n\t\tlet vy1 = 0;\n\t\tlet vy2 = 0;\n\t\tfor (let j = i + 1; j < list.length; j++) {\n\t\t\tlet p2 = list[j];\n\t\t\tlet d = getDistance(p1.x, p1.y, p2.x, p2.y);\n\t\t\tconst MAXD = 0;\n\t\t\tif(d < MAXD){\n\t\t\t\tlet force;\n\t\t\t\tif((d) < MAXD * 0.1) force = -1;\n\t\t\t\tif((d) < MAXD * 0.55) force = 1 * ((d)- MAXD * 0.1) / (MAXD * 0.45);\n\t\t\t\tif((d) < MAXD) force = 1 * (MAXD - (d)) / (MAXD * 0.45);\n\n\t\t\t\tvx1+= (p2.x > p1.x) ? 1 : -1 * force;\n\t\t\t\tvx2+= (p1.x > p2.x) ? 1 : -1 * force;\n\t\t\t\tvy1+= (p2.y > p1.y) ? 1 : -1 * force;\n\t\t\t\tvy2+= (p1.y > p2.y) ? 1 : -1 * force;\n\t\t\t}\n\t\t}\n\t\tp1.x+= caluVelocity(p1.vx);\n\t\tp1.y+= caluVelocity(p1.vy);\n\t\tconst GRAVITY = 100;\n\t\tvx1+= (board.width*0.5 + GRAVITY/2 > p1.x) ? 1 : -1 * GRAVITY;\n\t\tvx1-= (board.width*0.5 - GRAVITY/2 < p1.x) ? 1 : -1 * GRAVITY;\n\t\tvy1+= (board.height/2 + GRAVITY/2 > p1.y) ? 1 : -1 * GRAVITY;\n\t\tvy1-= (board.height/2 - GRAVITY/2 < p1.y) ? 1 : -1 * GRAVITY;\n\t\taddVelocity(p1.vx, vx1);\n\t\taddVelocity(p1.vy, vy1);\n\n\t}\n\tfunction getDistance(x1, y1, x2, y2){\n\t\tlet d = Math.sqrt(Math.pow(x1-x2, 2) + Math.pow(y1-y2, 2));\n\t\treturn d;\n\t}\n\t// function getForce(n1, n2){\n\t// \tlet one = (n2 > n1) ? 1 : -1;\n\t// \tlet force;\n\t// \tif((n2 - n1) * one < 10) force = -one;\n\t// \tif((n2 - n1) * one < 30) force = one * ((n2 - n1) * one - 10) / 20;\n\t// \tif((n2 - n1) * one < 50) force = one * (50 - (n2 - n1) * one) / 20;\n\t// \treturn force;\n\t// }\n\tfunction getForce(d){\n\t\treturn force;\n\t}\n\tfunction addVelocity(a, v){\n\t\ta.splice(1, 0, v);\n\t\ta.splice(60, 1);\n\t}\n\tfunction caluVelocity(a){\n\t\tlet sum = 0;\n\t\ta.forEach(value => {sum+= value/a.length /20;})\n\t\treturn sum\n\t}\n\n}\n\n// Lotka Volterra紋理子系統\n\t\t\nfunction addTexture(list) {\n\tfor (let i = 0; i < list.length; i++) {\n\t\tlet point = list[i];\n\t\tlet x = point.x;\n\t\tlet y = point.y;\n\t\tlet blue = y/board.width * 255;\n\t\tlet green = x/board.width * 255;\n\t\tlet red = Math.sin(transitionRadian) * 255;\n\t\tlet transitionColor = \"rgb(\" + Math.abs(red).toString() + \",\" + Math.abs(green).toString() + \",\" + Math.abs(blue).toString() + \")\";\n\t\n\t\tlet ex = x / board.width;\n\t\tlet ey = y / board.height;\n\t\tlet dx = equation1(ex, ey) * board.width;\n\t\tlet dy = equation2(ex, ey) * board.height;\n\t\tlet myPoint = {\n\t\t\t\"name\": \"point\",\n\t\t\t\"ctx\": board_ctx,\n\t\t\t\"size\": 2,\n\t\t\t\"x\": x,\n\t\t\t\"y\": y,\n\t\t\t\"color\": transitionColor\n\t\t}\n\t\tpainter.works.push(myPoint);\n\t\tlet myLine = {\n\t\t\t\"name\": \"line\",\n\t\t\t\"ctx\": board_ctx,\n\t\t\t\"size\": 2,\n\t\t\t\"x\": x,\n\t\t\t\"y\": y,\n\t\t\t\"x2\": x + dlength * dx,\n\t\t\t\"y2\": y + dlength * dy,\n\t\t\t\"color\": transitionColor\n\t\t}\n\t\tpainter.works.push(myLine);\n\t}\n\ttransitionRadian += trasitionOmega * speed;\n\n\tfunction equation1(x, y) {\n\t\tif(mouseOn){\n\t\t\tlet ratio = (myMouse.pointY > 0.2) ? myMouse.pointY : 0.2;\n\t\t\treturn alpha * x - (1 / ratio * alpha * x * y);\n\t\t}\n\t\telse return alpha * x - (beta * x * y);\n\t}\n\n\tfunction equation2(x, y) {\n\t\tif(mouseOn){\n\t\t\tlet ratio = (myMouse.pointX > 0.2) ? myMouse.pointX : 0.2;\n\t\t\treturn (1 / ratio * gamma * x * y) -  gamma * y;\n\t\t}\n\t\telse return (delta * x * y) -  gamma * y;\n\t}\n}\n\n// fps子系統\nfunction updateFps(){\n\tlet duration = (Date.now() - timeBefore); // 秒數\n\ttimeBefore = Date.now();\n\tDELAY.push(duration);\n\tDELAY.splice(0, 1);\n\tlet sum = 0;\n\tlet fps;\n\tfor(let N = 0; N < DELAY.length; N++){\n\t\tsum = sum + DELAY[N];\n\t}\n\tfps = Math.round(1000 / (sum / DELAY.length));\n\n\tlet angle = Math.PI * (Date.now() % 3000) / 1500;\n\tlet size = (board.height + board.width) * 0.003;\n\tlet x = board.width/2;// - size * 20;\n\tlet y = board.height - size * 20;\n\tlet blue = y/board.width * 255;\n\tlet green = x/board.width * 255;\n\tlet red = Math.sin(transitionRadian) * 255;\n\tlet transitionColor = \"rgb(\" + Math.abs(red).toString() + \",\" + Math.abs(green).toString() + \",\" + Math.abs(blue).toString() + \")\";\n\tlet backgroundColor = \"rgb(\" + Math.abs(red*0.3).toString() + \",\" + Math.abs(green*0.2).toString() + \",\" + Math.abs(blue*0.4).toString() + \")\";\n\n\tlet circle = {\n\t\t\"name\": \"circle\",\n\t\t\"ctx\": board_ctx,\n\t\t\"r\": size * 10,\n\t\t\"x\": x,\n\t\t\"y\": y,\n\t\t\"color\": backgroundColor\n\t}\n\tlet crescent1 = {\n\t\t\"name\": \"crescent\",\n\t\t\"ctx\": board_ctx,\n\t\t\"size\": size,\n\t\t\"a\": 1,\n\t\t\"b\": 9,\n\t\t\"angle\": angle * 3,\n\t\t\"x\": x,\n\t\t\"y\": y,\n\t\t\"color\": transitionColor\n\t}\n\tlet crescent2 = {\n\t\t\"name\": \"crescent\",\n\t\t\"ctx\": board_ctx,\n\t\t\"size\": size,\n\t\t\"a\": 1,\n\t\t\"b\": 8,\n\t\t\"angle\": angle * 2,\n\t\t\"x\": x,\n\t\t\"y\": y,\n\t\t\"color\": transitionColor\n\t}\n\tlet crescent3 = {\n\t\t\"name\": \"crescent\",\n\t\t\"ctx\": board_ctx,\n\t\t\"size\": size,\n\t\t\"a\": 1,\n\t\t\"b\": 7,\n\t\t\"angle\": angle * 1,\n\t\t\"x\": x,\n\t\t\"y\": y,\n\t\t\"color\": transitionColor\n\t}\n\tlet text1 = {\n\t\t\"name\": \"text\",\n\t\t\"ctx\": board_ctx,\n\t\t\"text\": \"fps\",\n\t\t\"size\": size * 4,\n\t\t\"x\": x,\n\t\t\"y\": y - size * 3,\n\t\t\"color\": transitionColor\n\t}\n\tlet text2 = {\n\t\t\"name\": \"text\",\n\t\t\"ctx\": board_ctx,\n\t\t\"text\": fps,\n\t\t\"size\": size * 4,\n\t\t\"x\": x,\n\t\t\"y\": y + size * 3,\n\t\t\"color\": transitionColor\n\t}\n\tlet text3 = {\n\t\t\"name\": \"text\",\n\t\t\"ctx\": board_ctx,\n\t\t\"text\": \"Res: \" + Math.round(board.width) + \" x \" + Math.round(board.height),\n\t\t\"size\": size * 4,\n\t\t\"x\": x,\n\t\t\"y\": y + size * 13,\n\t\t\"color\": transitionColor\n\t}\n\tpainter.works.push(circle, crescent1, crescent2, crescent3, text1, text2, text3);\n}"],"names":["data"],"mappings":"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"}