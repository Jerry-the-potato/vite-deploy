{"version":3,"file":"worker-D_oxkCaB.js","sources":["../src/js/createPainter.js","../src/js/path.js","../src/js/myMouse.js","../src/js/lokaVolterraAlgorithm.js","../src/js/worker.js"],"sourcesContent":["// 畫筆建構式-管理繪圖方法\nexport default function createPainter(){\n\tthis.works = [];\n\tthis.draw = function(obj){ // 透過 painter.draw 呼叫其私有函式\n\t\tlet ctx = obj.ctx;\n\t\tlet x = obj.x;\n\t\tlet y = obj.y;\n\t\tlet r = obj.r;\n\t\tlet x2 = obj.x2;\n\t\tlet y2 = obj.y2;\n\t\tlet text = obj.text;\n\t\tlet size = obj.size;\n\t\tlet color = obj.color;\n\t\t\n\t\tlet a = obj.a;\n\t\tlet b = obj.b;\n\t\tlet angle = obj.angle;\n\t\tif(ctx)\n\t\t\tswitch(obj.name){\n\t\t\t\tcase \"circle\": drawCircle();\n\t\t\t\tbreak;\n\t\t\t\tcase \"point\": drawPoint();\n\t\t\t\tbreak;\n\t\t\t\tcase \"line\": drawLine();\n\t\t\t\tbreak;\n\t\t\t\tcase \"crescent\": drawCrescent();\n\t\t\t\tbreak;\n\t\t\t\tcase \"text\": drawText();\n\t\t\t}\n\t\tfunction drawCircle() {\n\t\t\tif(x + y + r == \"NaN\"){\n\t\t\t\tconsole.warn(\"drawCircle failed: missing parameter\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, r, 0, 2 * Math.PI, false);\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.fill();\n\t\t}\n\t\t\n\t\tfunction drawPoint() {\n\t\t\tif(x + y + size == \"NaN\"){\n\t\t\t\tconsole.warn(\"drawPoint failed: missing parameter\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.fillRect(x - size/2, y - size/2, size, size);\n\t\t}\n\t\t\n\t\tfunction drawLine() {\n\t\t\tif(x + y + x2 + y2 == \"NaN\"){\n\t\t\t\tconsole.warn(\"drawLine failed: missing parameter\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.strokeStyle = color;\n\t\t\tctx.lineWidth = (size)?size:1;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tfunction drawCrescent(){\n\t\t\tif(x + y + a + b + angle + size == \"NaN\"){\n\t\t\t\tconsole.warn(\"drawCrescent failed: missing parameter\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet c = Math.sqrt(a * a + b * b);\n\t\t\tlet aTan = Math.atan(a / b);\n\t\t\tlet dx = Math.cos(angle + Math.PI / 2) * a * size;\n\t\t\tlet dy = Math.sin(angle + Math.PI / 2) * a * size;\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, b * size, angle, Math.PI + angle, true);\n\t\t\tctx.arc(x + dx, y + dy, c * size, Math.PI + angle + aTan, angle - aTan, false); // 順時針 縮小 +-\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.fill(); \n\t\t}\n\t\tfunction drawText(){\n\t\t\tx = Math.round(x);\n\t\t\ty = Math.round(y);\n\t\t\tctx.font = size + \"px Comic Sans MS\";\n\t\t\tctx.textBaseline = \"middle\";\n\t\t\tctx.textAlign = \"center\";\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.fillText(text, x, y);\n\t\t}\n\t}\n}","class PathConfig{\n    static linear = -1;\n    static easein = 0;\n    static easeout = 2;\n\n    static leapLinear = 0;\n    static leapEasein = -2;\n    static leapEaseout = 2;\n    \n    static resetPath(linear = 1, easein = 0, easeout = 0){\n        if(linear + easein + easeout != 1) console.warn(\"PathConfig.resetPath: sum of parameter is recommend to be 1\");\n        PathConfig.linear = linear;\n        PathConfig.easein = easein;\n        PathConfig.easeout = easeout;\n    }\n\n    static resetLeap(linear = 0, easein = 0, easeout = 0){\n        PathConfig.leapLinear = linear;\n        PathConfig.leapEasein = easein;\n        PathConfig.leapEaseout = easeout;\n    }\n\n    getPath(){\n        return [PathConfig.linear, PathConfig.easein, PathConfig.easeout];\n    }\n    getLeap(){\n        return [PathConfig.leapLinear, PathConfig.leapEasein, PathConfig.leapEaseout];\n    }\n}\nclass Path extends PathConfig{\n    constructor(x = 0, y = 0){\n        super();\n        this.pointX = x;\n        this.pointY = y;\n    \n        this.originX = x;\n        this.originY = y;\n\n        this.targetX = x;\n        this.targetY = y;\n        \n        this.period = 90;\n        this.timer = 0;\n        this.ID = 0;\n    }\n    NewTarget = function(targetX, targetY, frames){\n        this.targetX = targetX;\n        this.targetY = targetY;\n        this.originX = this.pointX;\n        this.originY = this.pointY;\n        this.timer = (frames >= 10) ? frames : 0;\n        this.period = (frames >= 10) ? frames : 1;\n        cancelAnimationFrame(this.ID);\n        this.ID = requestAnimationFrame(this.NextFrame);\n    };\n    ResetTo = function(x = x, y = y){\n        this.pointX = x;\n        this.pointY = y;\n        this.timer = 0;\n    };\n\n    getPath(){\n        return super.getPath();\n    }\n    getLeap(){\n        return super.getLeap();\n    }\n    NextFrame = function(){\n        if(this.timer <= 0){\n            this.pointX = this.targetX;\n            this.pointY = this.targetY;\n            return;\n        }\n\n        this.timer--;\n        const dX = this.targetX - this.originX;\n        const dY = this.targetY - this.originY;\n        const t = this.timer;\n        const p = this.period;\n        const linear = 1/p;\n        const easeout = Math.pow((t+1)/p, 2) - Math.pow((t)/p, 2);\n        const easein = Math.pow(1 - (t-1)/p, 2) - Math.pow(1 - t/p, 2);\n        const [a, b, c] = this.getPath();\n        const [d, e, f] = this.getLeap();\n        this.pointX+= (a * linear + b * easein + c * easeout) * dX;\n        this.pointY+= (a * linear + b * easein + c * easeout) * dY\n            + (d * linear + e * easein + f * easeout) * ((-dX/5 + 10 * -dX/Math.abs(dX==0 ? 1 : dX)));\n        this.ID = requestAnimationFrame(this.NextFrame);  \n    }.bind(this);\n}\n\nexport { Path };\nexport { PathConfig };","import { Path } from \"../js/path.js\";\n\nconst myMouse = new Path();\nexport default myMouse;","import createPainter from \"./createPainter\";\nimport myMouse from \"./myMouse\";\nfunction clearBoard(ctx) {\n\tctx.canvas.width*= 1;\n}\n\n// 粒子引力和動畫演算法\nexport default function lokaVolterraAlgorithm(){\n\tconst painter = new createPainter();\n\t\n\tthis.alpha = 5;\n\tthis.beta = 10;\n\tthis.gamma = 5;\n\tthis.delta = 10;\n\tthis.dlength = 0.01;\n\n\tthis.speed = 10;\n    this.useMouse = false;\n\tthis.isTransform = false;\n\n    this.updateData = (data) => {\n        this.useMouse = data.useMouse;\n        this.isTransform = data.isTransform;\n        this.alpha = data.alpha;\n        this.beta = data.beta;\n        this.gamma = data.gamma;\n        this.delta = data.delta;\n        this.dlength = data.dlength * 0.001;\n        this.speed = data.speed;\n    }\n\tthis.reset = (width, height) => {\n\t\tthis.transitionRadian = 0;\n\t\tthis.trasitionOmega = Math.PI / 10000;\n\n\t\tconst len = 2000;\n\t\tthis.data = [];\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst point = {\n\t\t\t\t\"d\": Math.sqrt(Math.random()) * width / 2, // distance\n\t\t\t\t\"r\": Math.random() * 2 * Math.PI, // radian\n\t\t\t\t\"fakeX\": width/2,\n\t\t\t\t\"fakeY\": height/2,\n\t\t\t\t\"vx\": [],\n\t\t\t\t\"vy\": []\n\t\t\t};\n\t\t\tpoint.x = width / 2 + point.d * Math.cos(point.r);\n\t\t\tpoint.y = height / 2 + point.d * Math.sin(point.r);\n\t\t\t// 減去下面兩行會有很酷的效果\n\t\t\tpoint.fakeX = point.x;\n\t\t\tpoint.fakeY = point.y;\n\t\t\tthis.data.push(point);\n\t\t}\n\t}\n\tthis.render = (ctx, offset) => {\n\t\tclearBoard(ctx);\n\t\tctx.save();\n\t\tctx.translate(ctx.canvas.width * offset, 0);\n\t\tpainter.works.forEach(point => {painter.draw(point);});\n\t\tpainter.works = [];\n\t\tctx.restore();\n\t}\n\tthis.update = (ctx, width, height) => {\n\t\tthis.transitionRadian += this.trasitionOmega * this.speed;\n\t\tthis.motion(width, height);\n\t\tthis.addTexture(width, height, ctx);\n\t\tthis.updateFps(width, height, ctx);\n\t}\n\n\tthis.motion = (width, height) => {\n\t\t// 沿著中心點旋轉\n\t\tthis.data.forEach((point) => {\n\t\t\tconst rad = this.transitionRadian;\n\t\t\tconst period1 = Math.cos(rad)*Math.sin(rad);\n\t\t\tconst period2 = Math.sin(rad);\n\t\t\tconst period3 = Math.sin(rad*2);\n\n\t\t\tconst scaleFactor = this.isTransform ? 0.1 + 1.4 * (1 - period3) : 1; \n    \t\tconst d = point.d / 3 * scaleFactor;\n\n\t\t\tconst angular1 = d * period1 * 0.1;\n\t\t\tconst angular2 = d * period2 * 0.1;\n\n\t\t\tpoint.r+= Math.PI / 100;\n\n\t\t\tconst newX = width / 2 + d * Math.cos(point.r + angular1);\n\t\t\tconst newY = height / 2 + d * Math.sin(point.r + angular2);\n\t\t\t\n\t\t\tpoint.x += newX - point.fakeX;\n\t\t\tpoint.y += newY - point.fakeY;\n\t\t\t\n\t\t\tpoint.fakeX = newX;\n\t\t\tpoint.fakeY = newY;\n\t\t})\n\t\t\n\t\t// 物理引擎\n\t\tif(false)\n\t\tfor (let i = 0; i < this.data.length; i++) {\n\t\t\tconst p1 = this.data[i];\n\t\t\tlet vx1 = 0;\n\t\t\tlet vx2 = 0;\n\t\t\tlet vy1 = 0;\n\t\t\tlet vy2 = 0;\n\t\t\tfor (let j = i + 1; j < this.data.length; j++) {\n\t\t\t\tconst p2 = this.data[j];\n\t\t\t\tconst d = getDistance(p1.x, p1.y, p2.x, p2.y);\n\t\t\t\tconst MAXD = 0;\n\t\t\t\tif(d < MAXD){\n\t\t\t\t\tlet force;\n\t\t\t\t\tif((d) < MAXD * 0.1) force = -1;\n\t\t\t\t\tif((d) < MAXD * 0.55) force = 1 * ((d)- MAXD * 0.1) / (MAXD * 0.45);\n\t\t\t\t\tif((d) < MAXD) force = 1 * (MAXD - (d)) / (MAXD * 0.45);\n\n\t\t\t\t\tvx1+= (p2.x > p1.x) ? 1 : -1 * force;\n\t\t\t\t\tvx2+= (p1.x > p2.x) ? 1 : -1 * force;\n\t\t\t\t\tvy1+= (p2.y > p1.y) ? 1 : -1 * force;\n\t\t\t\t\tvy2+= (p1.y > p2.y) ? 1 : -1 * force;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp1.x+= caluVelocity(p1.vx);\n\t\t\tp1.y+= caluVelocity(p1.vy);\n\t\t\tconst GRAVITY = 100;\n\t\t\tvx1+= (width*0.5 + GRAVITY/2 > p1.x) ? 1 : -1 * GRAVITY;\n\t\t\tvx1-= (width*0.5 - GRAVITY/2 < p1.x) ? 1 : -1 * GRAVITY;\n\t\t\tvy1+= (height/2 + GRAVITY/2 > p1.y) ? 1 : -1 * GRAVITY;\n\t\t\tvy1-= (height/2 - GRAVITY/2 < p1.y) ? 1 : -1 * GRAVITY;\n\t\t\taddVelocity(p1.vx, vx1);\n\t\t\taddVelocity(p1.vy, vy1);\n\t\t}\n\t\tfunction getDistance(x1, y1, x2, y2){\n\t\t\tconst distance = Math.sqrt(Math.pow(x1-x2, 2) + Math.pow(y1-y2, 2));\n\t\t\treturn distance;\n\t\t}\n\t\tfunction addVelocity(a, v){\n\t\t\ta.splice(1, 0, v);\n\t\t\ta.splice(60, 1);\n\t\t}\n\t\tfunction caluVelocity(a){\n\t\t\tlet sum = 0;\n\t\t\ta.forEach(value => {sum+= value/a.length /20;})\n\t\t\treturn sum\n\t\t}\n\t}\n\t// Lotka Volterra紋理\n\tthis.addTexture = (width, height, ctx) => {\n\t\tfor (let i = 0; i < this.data.length; i++) {\n\t\t\tconst point = this.data[i];\n\t\t\tconst x = point.x;\n\t\t\tconst y = point.y;\n\t\t\tconst ex = x / width;\n\t\t\tconst ey = y / height;\n\t\t\tconst dx = this.equation1(ex, ey, height) * width;\n\t\t\tconst dy = this.equation2(ex, ey, width) * height;\n\t\t\t\n\t\t\tconst blue = y/width * 255;\n\t\t\tconst green = x/width * 255;\n\t\t\tconst red = Math.sin(this.transitionRadian) * 255;\n\t\t\tconst color = \"rgb(\" + Math.abs(red).toString() + \",\" + Math.abs(green).toString() + \",\" + Math.abs(blue).toString() + \")\";\n\t\t\t\n\t\t\tconst mypoint = {\n\t\t\t\t\"name\": \"point\",\n\t\t\t\t\"ctx\": ctx,\n\t\t\t\t\"size\": 2,\n\t\t\t\t\"x\": x,\n\t\t\t\t\"y\": y,\n\t\t\t\t\"color\": color\n\t\t\t}\n\t\t\tpainter.works.push(mypoint);\n\t\t\tconst myline = {\n\t\t\t\t\"name\": \"line\",\n\t\t\t\t\"ctx\": ctx,\n\t\t\t\t\"size\": 2,\n\t\t\t\t\"x\": x,\n\t\t\t\t\"y\": y,\n\t\t\t\t\"x2\": x + this.dlength * dx,\n\t\t\t\t\"y2\": y + this.dlength * dy,\n\t\t\t\t\"color\": color\n\t\t\t}\n\t\t\tpainter.works.push(myline);\n\t\t}\n\t}\n\t\n\tthis.equation1 = (x, y, height) => {\n\t\tif(this.useMouse){\n\t\t\tconst ratio = (myMouse.pointY / height > 0.2) ? myMouse.pointY / height : 0.2;\n\t\t\t// console.log(ratio);\n\t\t\treturn this.alpha * x - (1 / ratio * this.alpha * x * y);\n\t\t}\n\t\treturn this.alpha * x - this.beta * x * y;\n\t}\n\tthis.equation2 = (x, y, width) => {\n\t\tif(this.useMouse){\n\t\t\tconst ratio = (myMouse.pointX / width > 0.2) ? myMouse.pointX / width : 0.2;\n\t\t\treturn (1 / ratio * this.gamma * x * y) -  this.gamma * y;\n\t\t}\n\t\treturn this.delta * x * y -  this.gamma * y;\n\t}\n\n\tthis.timeBefore = Date.now();\n\tconst delay = new Array(100);\n\tdelay.fill(16);\n\t// fps子系統\n\tthis.updateFps = (width, height, ctx) => {\n\t\tconst duration = (Date.now() - this.timeBefore); // 秒數\n\t\tthis.timeBefore = Date.now();\n\t\tdelay.push(duration);\n\t\tconst throwAway = delay.shift();\n\t\tconst sum = delay.reduce((total, current) => {\n\t\t\treturn total + current;\n\t\t}, 0)\n\t\tconst fps = Math.round(1000 / (sum / delay.length));\n\n\t\tconst angle = Math.PI * (Date.now() % 3000) / 1500;\n\t\tconst size = (height + width) * 0.003;\n\t\tconst x = width * 0.5// - size * 20;\n\t\tconst y = height - size * 20 //* 0.9;\n\t\tconst blue = y/width * 255;\n\t\tconst green = x/width * 255;\n\t\tconst red = Math.sin(this.transitionRadian) * 255;\n\t\tconst transitionColor = \"rgb(\" + Math.abs(red).toString() + \",\" + Math.abs(green).toString() + \",\" + Math.abs(blue).toString() + \")\";\n\t\tconst backgroundColor = \"rgb(\" + Math.abs(red*0.3).toString() + \",\" + Math.abs(green*0.2).toString() + \",\" + Math.abs(blue*0.4).toString() + \")\";\n\n\t\tconst circle = {\n\t\t\t\"name\": \"circle\",\n\t\t\t\"ctx\": ctx,\n\t\t\t\"r\": size * 10,\n\t\t\t\"x\": x,\n\t\t\t\"y\": y,\n\t\t\t\"color\": backgroundColor\n\t\t}\n\t\tconst crescent1 = {\n\t\t\t\"name\": \"crescent\",\n\t\t\t\"ctx\": ctx,\n\t\t\t\"size\": size,\n\t\t\t\"a\": 1,\n\t\t\t\"b\": 9,\n\t\t\t\"angle\": angle * 3,\n\t\t\t\"x\": x,\n\t\t\t\"y\": y,\n\t\t\t\"color\": transitionColor\n\t\t}\n\t\tconst crescent2 = {\n\t\t\t\"name\": \"crescent\",\n\t\t\t\"ctx\": ctx,\n\t\t\t\"size\": size,\n\t\t\t\"a\": 1,\n\t\t\t\"b\": 8,\n\t\t\t\"angle\": angle * 2,\n\t\t\t\"x\": x,\n\t\t\t\"y\": y,\n\t\t\t\"color\": transitionColor\n\t\t}\n\t\tconst crescent3 = {\n\t\t\t\"name\": \"crescent\",\n\t\t\t\"ctx\": ctx,\n\t\t\t\"size\": size,\n\t\t\t\"a\": 1,\n\t\t\t\"b\": 7,\n\t\t\t\"angle\": angle * 1,\n\t\t\t\"x\": x,\n\t\t\t\"y\": y,\n\t\t\t\"color\": transitionColor\n\t\t}\n\t\tconst text1 = {\n\t\t\t\"name\": \"text\",\n\t\t\t\"ctx\": ctx,\n\t\t\t\"text\": \"fps\",\n\t\t\t\"size\": size * 4,\n\t\t\t\"x\": x,\n\t\t\t\"y\": y - size * 3,\n\t\t\t\"color\": transitionColor\n\t\t}\n\t\tconst text2 = {\n\t\t\t\"name\": \"text\",\n\t\t\t\"ctx\": ctx,\n\t\t\t\"text\": fps,\n\t\t\t\"size\": size * 4,\n\t\t\t\"x\": x,\n\t\t\t\"y\": y + size * 3,\n\t\t\t\"color\": transitionColor\n\t\t}\n\t\tconst text3 = {\n\t\t\t\"name\": \"text\",\n\t\t\t\"ctx\": ctx,\n\t\t\t\"text\": \"Res: \" + Math.round(width) + \" x \" + Math.round(height),\n\t\t\t\"size\": size * 4,\n\t\t\t\"x\": x,\n\t\t\t\"y\": y + size * 13,\n\t\t\t\"color\": transitionColor\n\t\t}\n\t\tpainter.works.push(circle, crescent1, crescent2, crescent3, text1, text2, text3);\n\t}\n\treturn this;\n}","import lokaVolterraAlgorithm from \"./lokaVolterraAlgorithm\";\n// 控制介面\nself.onmessage = function handleMessageFromMain(msg) {\n    switch(msg.data.name){\n        case \"transferControlToOffscreen\":\n\t\t\tcanvas = msg.data.canvas;\n\t\t\tctx = canvas.getContext('2d');\n\t\t\talgorithm.reset(canvas.width, canvas.height);\n\t\t\tbreak;\n\t\tcase \"setOffscreen\":\n            canvas.width = msg.data.w;\n            canvas.height = msg.data.h;\n\t\t\tbreak;\n\t\tcase \"cancelAnimation\":\n\t\t\tcancelAnimationFrame(requestID);\n\t\t\trequestID = undefined;\n\t\t\tbreak;\n\t\tcase \"requestAnimation\":\n\t\t\tif(requestID) self.postMessage({\"name\": \"error\", \"message\": \"requestAnimation existed\"});\n\t\t\telse requestID = requestAnimationFrame(main);\n    }\n};\n\nlet requestID = undefined;\nlet canvas;\nlet ctx;\nconst algorithm = new lokaVolterraAlgorithm();\n\n// 繪圖系統-main\nfunction main() {\n\talgorithm.render(ctx, 0.25);\n\talgorithm.update(ctx, canvas.width, canvas.height);\n\trequestID = requestAnimationFrame(main);\n}"],"names":["ctx"],"mappings":"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"}